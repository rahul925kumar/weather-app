{"version":3,"sources":["ApiKey.js","images/WeatherIcons.gif","Forecast.js","CurrentLocation.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","key","base","__webpack_require__","p","Forcast","props","_useState","useState","_useState2","Object","slicedToArray","query","setQuery","_useState3","_useState4","error","setError","_useState5","_useState6","weather","setWeather","search","city","axios","get","concat","apiKeys","then","response","console","log","data","catch","message","defaults","useEffect","react_default","a","createElement","className","build_default","icon","color","size","animate","type","placeholder","onChange","e","target","value","src","onClick","main","name","sys","country","Math","round","temp","humidity","visibility","wind","speed","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","Weather","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","apply","lat","lon","errorMessage","temperatureC","temperatureF","description","sunrise","sunset","errorMsg","getPosition","options","navigator","geolocation","getCurrentPosition","getWeather","_ref","asyncToGenerator","_callee","api_call","_context","fetch","json","setState","t0","_x","_x2","inherits","createClass","_this2","position","coords","latitude","longitude","alert","timerID","setInterval","clearInterval","Fragment","id","lib_default","format","interval","ticking","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Forecast","loader","style","width","WebkitUserDrag","fontSize","fontWeight","marginTop","React","Component","App","CurrentLocation","href","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e3e3ca13.chunk.js","sourcesContent":["module.exports = {\r\n    key: \"4c066c46a7050090add7b83b20f47c67\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n  ","module.exports = __webpack_public_path__ + \"static/media/WeatherIcons.0a218296.gif\";","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport apiKeys from \"./ApiKey\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\n\r\nfunction Forcast(props) {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [weather, setWeather] = useState({});\r\n\r\n    const search = (city) => {\r\n        axios.get(\r\n            `${apiKeys.base}weather?q=${city != \"[object Object]\" ? city : query\r\n            }&units=metric&APPID=${apiKeys.key}`\r\n        )\r\n            .then((response) => {\r\n                console.log(\"response.data\", response.data)\r\n                setWeather(response.data);\r\n                setQuery(\"\");\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setWeather(\"\");\r\n                setQuery(\"\");\r\n                setError({ message: \"Not Found\", query: query });\r\n            });\r\n    };\r\n    function checkTime(i) {\r\n        if (i < 10) {\r\n            i = \"0\" + i;\r\n        } // add zero in front of numbers < 10\r\n        return i;\r\n    }\r\n\r\n    const defaults = {\r\n        color: \"white\",\r\n        size: 112,\r\n        animate: true,\r\n    };\r\n\r\n    useEffect(() => {\r\n        search(\"Delhi\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"forecast\">\r\n            <div className=\"forecast-icon\">\r\n                <ReactAnimatedWeather\r\n                    icon={props.icon}\r\n                    color={defaults.color}\r\n                    size={defaults.size}\r\n                    animate={defaults.animate}\r\n                />\r\n            </div>\r\n            <div className=\"today-weather\">\r\n                <h3>{props.weather}</h3>\r\n                <div className=\"search-box\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"search-bar\"\r\n                        placeholder=\"Search any city\"\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        value={query}\r\n                    />\r\n                    <div className=\"img-box\">\r\n                        {\" \"}\r\n                        <img\r\n                            src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\r\n                            onClick={search}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <ul>\r\n                    {typeof weather.main != \"undefined\" ? (\r\n                        <div>\r\n                            {\" \"}\r\n                            <li className=\"cityHead\">\r\n                                <p>\r\n                                    {weather.name}, {weather.sys.country}\r\n                                </p>\r\n                                <img\r\n                                    className=\"temp\"\r\n                                    src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\r\n                                />\r\n                            </li>\r\n                            <li>\r\n                                Temperature{\" \"}\r\n                                <span className=\"temp\">\r\n                                    {Math.round(weather.main.temp)}°c ({weather.weather[0].main})\r\n                                </span>\r\n                            </li>\r\n                            <li>\r\n                                Humidity{\" \"}\r\n                                <span className=\"temp\">\r\n                                    {Math.round(weather.main.humidity)}%\r\n                                </span>\r\n                            </li>\r\n                            <li>\r\n                                Visibility{\" \"}\r\n                                <span className=\"temp\">\r\n                                    {Math.round(weather.visibility)} mi\r\n                                </span>\r\n                            </li>\r\n                            <li>\r\n                                Wind Speed{\" \"}\r\n                                <span className=\"temp\">\r\n                                    {Math.round(weather.wind.speed)} Km/h\r\n                                </span>\r\n                            </li>\r\n                        </div>\r\n                    ) : (\r\n                        <li>\r\n                            {error.query} {error.message}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Forcast;\r\n","import React from \"react\";\r\nimport apiKeys from \"./ApiKey\";\r\nimport Clock from \"react-live-clock\";\r\nimport Forcast from \"./Forecast\";\r\nimport loader from \"./images/WeatherIcons.gif\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\nconst dateBuilder = (d) => {\r\n    let months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n    let days = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day}, ${date} ${month} ${year}`;\r\n};\r\nconst defaults = {\r\n    color: \"white\",\r\n    size: 112,\r\n    animate: true,\r\n};\r\nclass Weather extends React.Component {\r\n    state = {\r\n        lat: undefined,\r\n        lon: undefined,\r\n        errorMessage: undefined,\r\n        temperatureC: undefined,\r\n        temperatureF: undefined,\r\n        city: undefined,\r\n        country: undefined,\r\n        humidity: undefined,\r\n        description: undefined,\r\n        icon: \"CLEAR_DAY\",\r\n        sunrise: undefined,\r\n        sunset: undefined,\r\n        errorMsg: undefined,\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (navigator.geolocation) {\r\n            this.getPosition()\r\n                //If user allow location service then will fetch data & send it to get-weather function.\r\n                .then((position) => {\r\n                    this.getWeather(position.coords.latitude, position.coords.longitude);\r\n                })\r\n                .catch((err) => {\r\n                    //If user denied location service then standard location weather will le shown on basis of latitude & latitude.\r\n                    this.getWeather(28.67, 77.22);\r\n                    alert(\r\n                        \"You have disabled location service. Allow 'This APP' to access your location. Your current location will be used for calculating Real time weather.\"\r\n                    );\r\n                });\r\n        } else {\r\n            alert(\"Geolocation not available\");\r\n        }\r\n\r\n        this.timerID = setInterval(\r\n            () => this.getWeather(this.state.lat, this.state.lon),\r\n            600000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    // tick = () => {\r\n    //   this.getPosition()\r\n    //   .then((position) => {\r\n    //     this.getWeather(position.coords.latitude, position.coords.longitude)\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     this.setState({ errorMessage: err.message });\r\n    //   });\r\n    // }\r\n\r\n    getPosition = (options) => {\r\n        return new Promise(function (resolve, reject) {\r\n            navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n        });\r\n    };\r\n    getWeather = async (lat, lon) => {\r\n        const api_call = await fetch(\r\n            `${apiKeys.base}weather?lat=${lat}&lon=${lon}&units=metric&APPID=${apiKeys.key}`\r\n        );\r\n        const data = await api_call.json();\r\n        this.setState({\r\n            lat: lat,\r\n            lon: lon,\r\n            city: data.name,\r\n            temperatureC: Math.round(data.main.temp),\r\n            temperatureF: Math.round(data.main.temp * 1.8 + 32),\r\n            humidity: data.main.humidity,\r\n            main: data.weather[0].main,\r\n            country: data.sys.country,\r\n            // sunrise: this.getTimeFromUnixTimeStamp(data.sys.sunrise),\r\n\r\n            // sunset: this.getTimeFromUnixTimeStamp(data.sys.sunset),\r\n        });\r\n        switch (this.state.main) {\r\n            case \"Haze\":\r\n                this.setState({ icon: \"CLEAR_DAY\" });\r\n                break;\r\n            case \"Clouds\":\r\n                this.setState({ icon: \"CLOUDY\" });\r\n                break;\r\n            case \"Rain\":\r\n                this.setState({ icon: \"RAIN\" });\r\n                break;\r\n            case \"Snow\":\r\n                this.setState({ icon: \"SNOW\" });\r\n                break;\r\n            case \"Dust\":\r\n                this.setState({ icon: \"WIND\" });\r\n                break;\r\n            case \"Drizzle\":\r\n                this.setState({ icon: \"SLEET\" });\r\n                break;\r\n            case \"Fog\":\r\n                this.setState({ icon: \"FOG\" });\r\n                break;\r\n            case \"Smoke\":\r\n                this.setState({ icon: \"FOG\" });\r\n                break;\r\n            case \"Tornado\":\r\n                this.setState({ icon: \"WIND\" });\r\n                break;\r\n            default:\r\n                this.setState({ icon: \"CLEAR_DAY\" });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.temperatureC) {\r\n            return (\r\n                <>\r\n                    <div className=\"city\">\r\n                        <div className=\"title\">\r\n                            <h2>{this.state.city}</h2>\r\n                            <h3>{this.state.country}</h3>\r\n                        </div>\r\n                        <div className=\"mb-icon\">\r\n                            {\" \"}\r\n                            <ReactAnimatedWeather\r\n                                icon={this.state.icon}\r\n                                color={defaults.color}\r\n                                size={defaults.size}\r\n                                animate={defaults.animate}\r\n                            />\r\n                            <p>{this.state.main}</p>\r\n                        </div>\r\n                        <div className=\"date-time\">\r\n                            <div className=\"dmy\">\r\n                                <div id=\"txt\"></div>\r\n                                <div className=\"current-time\">\r\n                                    <Clock format=\"HH:mm:ss\" interval={1000} ticking={true} />\r\n                                </div>\r\n                                <div className=\"current-date\">{dateBuilder(new Date())}</div>\r\n                            </div>\r\n                            <div className=\"temperature\">\r\n                                <p>\r\n                                    {this.state.temperatureC}°<span>C</span>\r\n                                </p>\r\n                                {/* <span className=\"slash\">/</span>\r\n                {this.state.temperatureF} &deg;F */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Forcast icon={this.state.icon} weather={this.state.main} />\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    <img src={loader} style={{ width: \"50%\", WebkitUserDrag: \"none\" }} />\r\n                    <h3 style={{ color: \"white\", fontSize: \"22px\", fontWeight: \"600\" }}>\r\n                        Detecting your location\r\n                    </h3>\r\n                    <h3 style={{ color: \"white\", marginTop: \"10px\" }}>\r\n                        Your current location wil be displayed on the App <br></br> & used\r\n                        for calculating Real time weather.\r\n                    </h3>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Weather;\r\n","import React from \"react\";\nimport CurrentLocation from \"./CurrentLocation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <CurrentLocation />\n      </div>\n      <div className=\"footer-info\">\n        Developed by {\"    \"}\n        <p href=\"javascript:void(0)\">\n          Rahul Kumar\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}